service: quiz-app-backend

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  memorySize: 256
  timeout: 30

  environment:
    NODE_ENV: production
    MONGODB_URI: ${env:MONGODB_URI, ''}
    JWT_SECRET: ${env:JWT_SECRET, '2Ekum8Jhei8eTbM0XAx8zJdEdkJ5g'}
    LEADERBOARD_TABLE_NAME: Leaderboard

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "dynamodb:Scan"
            - "dynamodb:Query"
          Resource:
            - "arn:aws:dynamodb:${self:provider.region}:*:table/${self:provider.environment.LEADERBOARD_TABLE_NAME}"

functions:
  api:
    handler: dist/index.handler
    role: LambdaExecutionRole
    events:
      - http:
          path: /{proxy+}
          method: any
          cors: true
      - http:
          path: /
          method: any
          cors: true
  populateQuestion:
    handler: populate/index.handler
    role: LambdaExecutionRole
    package:
      individually: true
      patterns:
        - populate/**
        - '!node_modules/**'
        - '!dist/**'
        - '!tsconfig.json'
        - '!.env'
        - '!deploy.sh'
        - '!README.md'
        - '!yarn.lock'
        - '!package.json'
        - '!package-lock.json'
        - '!eslint.config.mjs'
plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 3000
    host: 0.0.0.0

package:
  patterns:
    - '!node_modules/**'
    - '!src/**'
    - '!*.ts'
    - '!tsconfig.json'
    - 'dist/**'
    - 'node_modules/**'
    - 'cs516-final-project'
  individually: false

resources:
  Resources:
    TopicTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Topic
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    QuestionTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Question
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    LeaderboardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: Leaderboard
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    LambdaExecutionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: quiz-app-lambda-role-${self:provider.stage}
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        ManagedPolicyArns:
          - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
          - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess_v2